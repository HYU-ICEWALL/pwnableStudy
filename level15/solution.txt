-level14와 같은 코드인데 check가 포인터로 바뀌었다
-기본적으로 포인터는 4 바이트를 차지하고있다.

-gdb로 깐다.

-스택프레임을 조사한결과 버퍼20위에 더미 20이 쌓여있고 다음이 포인터다
-0xdeadbeef와 비교하는것을 알수 있다.
-gdb에서 coml 명령의 위치를 확인해서 0xdeadbeef가 저장되어있는 위치를 알아낼 수 있다.

-그러면 check가 그곳을 가리키도록 수정해준다.
-즉 20+20(더미) + 0xdeadbeef의 위치 

	(python -c 'print "\x90"*40+"0xdeadbeef"';cat)|./attackme